version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: wttt
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/wttt
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: changeme
      S3_ENDPOINT: http://minio:9000
      S3_BUCKET: wttt-assets
      S3_ACCESS_KEY_ID: minioadmin
      S3_SECRET_ACCESS_KEY: minioadmin
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next

  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/wttt
      SP_API_REGION: NA
      SP_API_SELLER_ID: ""
      SP_API_ROLE_ARN: ""
      AWS_ACCESS_KEY_ID: ""
      AWS_SECRET_ACCESS_KEY: ""
      LWA_CLIENT_ID: ""
      LWA_CLIENT_SECRET: ""
      SP_API_REFRESH_TOKEN: ""
      MARKETPLACE_IDS: ATVPDKIKX0DER
      REPORT_LOOKBACK_DAYS: 30
      SYNC_CRON: "*/30 * * * *"
      WORKER_SECRET_KEY: changeme
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/worker:/app
      - /app/__pycache__

volumes:
  postgres_data:
  minio_data:
